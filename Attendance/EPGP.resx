<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="logWatch.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAHAAAADwoKChkICAggDQ0NJgwMDCoLCwsuCgoKMgoKCjIKCgoyCwsLMAwMDCwMDAwqDg4OJQgI
        CB4MDAwWAAAADQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhER
        EQ8LCwsuDAwMUgoKCnoICAiZBwkJqwcHB7cFBQXABgYFxgUFBcoFBQXNBQUFzgUFBc4EBQTMBQUFyQUG
        BcUHBwe/BgcHtggICKkJCQmVCwsLdQ4ODksMDAwqEhISDgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADEhISHA0NDU4ICAjHBQUF/wcGBv8JCQj/CAgH/wcGBv8HBwb/CAgH/wgICP8JCQj/CAgH/wcG
        Bv8GBgb/BwcG/wYGBv8HBgb/BwcG/wYFBf8FBAT/CAgIywwMDFMREREeAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACwsLRwcHB/gSERH/GxoY/x0bGv8aGBf/FxYV/x0cG/8iIB//IB4d/yAe
        HP8eHBv/HBoa/x0cG/8ZGBf/GxoZ/xwaGf8bGhn/GRgX/xEQEP8HBwb7CQkJUwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJCQjAFRQT/yonJf8uKin/LCoo/yooJ/8mJST/NDEw/zEv
        Lf8oJiT/LCkn/ywqKP8tKin/KScm/yQiIv8rKCf/LCoo/ywqKP8tKin/JiQj/xYVFP8JCAjKAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBYVFegrKSf/PTk3/zQwLv80MTD/ODU0/3F5
        df+wvbn/S01L/y0qKf8zMC//NDEv/y4qKf8pJiX/LCoo/y8sKv8uKyr/MzAv/zIvLf8tKyn/IR8e/w8P
        D+8LAAsYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ0TIyIi6kA9Ov9HQ0D/NzMy/zs4
        Nv84NjT/l6Oe/+b69P9dX1z/ODU0/zo2NP86NjX/Mi8t/zEuLP8vLCv/MzAu/zg1Mv8/Ozn/MC0r/zEu
        LP8lIyL/FBMT7woKChoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NDRMmJCPpPzw6/1BN
        Sf8/Ozn/Pjo4/0lGRP+cp6P/3vDr/2ttav9IREP/PTo5/z46Of8+Ozn/QDw6/z46OP86NjX/OTU0/zk1
        NP87NzX/PTk3/zUyMP8dGxvvCgoKGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AEygl
        JOlHQkD/TUhF/z04Nv9PSkf/WlZU/56ppf/h8+7/enx6/2BeXP9kZGL/ZWZk/1ZVVP9QTUr/R0RC/z86
        OP87NzX/Ozc1/zk1M/8+Ojj/Ozg2/x0cG+8KCgoaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAATIR8e6T05N/9AOzr/Pzo4/09KSf9WUlD/naik/+n69v+YnJv/ws3K/9zr6P/m9PL/4+7t/5ie
        nP9TUU//TEdG/0hDQv9BPTz/NTEw/zk1NP8xLi3/HRwb7woKChoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABMhIB/pOjU0/z05OP89OTj/T0pJ/0lHRv+bpaH/9f7+/9fl4v+wubb/g4WE/3Z4
        d/+vt7X/9v///6Kppv9bWFb/UEtK/0pFQ/86NjX/PTg3/zo2NP8gHx7vCgoKGgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEyYjIulEQD7/QT08/zw4N/89OTj/SkhG/6KsqP/w/fv/kJeT/2Jf
        Xf9dWVf/V1RS/2VkYv+/ysj/6Pbz/3+Aff9LR0b/PDc2/z05OP8/Ozr/QT07/yUjIu8KCgoaAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATLCgn6VNOTP9FQD//PDg3/z46Of9TUU//qrOv/+r5
        9f9xc3D/TktJ/1RPTf9OSUf/WlZV/5KXk//0////qrCs/19bWf9WUE//R0JB/0xHRf9UTk3/JyUj7woK
        ChoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMsKijpUEpK/0pFRP9FQD//UU1L/2Ff
        Xf+wuLX/7Pn2/36Aff9TTkz/VVBO/1VRT/9nYmD/kJGO/+v59v/DzMj/enVz/25nZf9WUE//UkxL/1JM
        Sv8tKynvCgoKGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEy4sK+lTTEz/WFJQ/1ZR
        T/9gW1n/aWZk/7O7uP/u+/j/jI6L/2BcWv9TTkz/XVdV/3Jtav+RkpD/6PXy/83W0v9/e3n/aWNh/1BL
        Sv9XUU//WFJR/zIvLu8KCgoaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATMS0s6VdS
        UP9UT03/VlBP/1hTUf91cW//tLy5/+/7+f+Mjov/Y15d/1JMS/9gWlj/fHZz/52fnP/v+/n/y9TQ/3Jv
        bf9JRUP/REBA/1JMS/9XUlD/Mi4t7woKChoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABM2MjDpXVdV/1NOTP9UTk3/VE9N/21pZ/+zurj/+f7+/5SYlv9cWVf/VE9O/2tkYv+Ef33/s7i1//z/
        //+ssq//Yl5d/01IR/9GQUD/Pzs6/0A8O/8pJiXvCgoKGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEyUiIelHQ0L/T0pJ/0lEQ/9NSUj/XFpY/6y0sf/+//7/2N7e/5mamf9wb23/dnRy/5qb
        mP/i6uf/9Pz7/5GSkP9kYF7/XVdV/1dRUP8/Ozr/Liwr/yAeHu8KCgoaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAATHhwb6Ts3Nv9DPj7/Qz89/1FNS/9aV1b/tby6//////+VmJf/4eTk/+7v
        7//a3t7/7/X0//7///+3vbr/e3Z1/2ZhXv9dV1X/Uk1M/0dDQv8wLSz/IB4e7woKChoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABInJSPpR0NC/0A8O/9APDv/R0NB/1ZTUv9/gYD/p6yr/3J0
        c/9xcnH/tre2/9XX1//N0dH/oKSi/4mGhP9pZGL/WFNR/1ZRT/9VT07/S0ZF/0VBP/8kIiHwCgoKGgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEA8Os9pY2H/SkZF/0xIR/9LR0b/Uk9N/09N
        S/9jYV//W1hW/2JfXf9cWlj/aWdl/398ev98d3X/g3x6/3Jsaf92b2z/amRi/2JdWv9mYV//amRi/zUy
        MdkAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjMzY5yVkv+Ri4j/hH98/3x3
        dv9va2j/bWhl/2ZiYP9ybWv/bGdl/3hzcf+Ig4D/oZuY/5GLiP+ak5D/qaKf/7Wuq/+lnpz/qKGe/6We
        m/+YkY7/MzExbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXlxagtDK
        x/fs5uP/9O7s/+Te2//Z0s//29TR/+Te2v/n4d//9/Hv//Xv7f/79fT///n4///7+f//+/r///79////
        /v//+/n/6OPh+XBubosAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALi4uLGhoaGSHhYVziIaGcoiGhHKGhIRyiIaGco2Li3KLiIhyi4iIco+Li3KPi4tykY2NcpGP
        jXKRj41yko6Oc3Jyb2U2NjYvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////AAD//AAAP/wAAD/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/wA
        AD/8AAA///////////////////////////8=
</value>
  </data>
  <metadata name="overlayReset.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>